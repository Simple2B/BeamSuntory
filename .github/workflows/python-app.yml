# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Beam Suntory CI/CD

on:
  push:
    tags:
      - 'v*.*.*'

env:
  IMAGE_NAME: simple2b/beam-suntory-app

jobs:
  on-develop-branch-check:
    runs-on: Linux
    outputs:
      on_develop: ${{ steps.contains_tag.outputs.retval }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: rickstaa/action-contains-tag@v1
        id: contains_tag
        with:
          reference: 'develop'
          tag: '${{ github.ref }}'
  tests:
    runs-on: Linux
    steps:
      - uses: actions/checkout@v3.5.2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: 1.5.1
      - name: Install dependencies
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Run Flask tests
        run: |
          poetry run pytest
  build:
    name: Build and push
    runs-on: Linux
    needs: tests
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push app
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # deploy-staging:
  #   name: Deploy to staging
  #   runs-on: Linux
  #   needs:
  #     - build
  #     - on-develop-branch-check
  #   if: ${{ needs.on-develop-branch-check.outputs.on_develop == 'true' }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: copy file via ssh password
  #       uses: appleboy/scp-action@v0.1.4
  #       with:
  #         host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
  #         username: ${{ secrets.SSH_PROD_USER }}
  #         key: ${{ secrets.SSH_PROD_KEY }}
  #         port: ${{ secrets.SSH_PROD_PORT }}
  #         source: 'docker-compose.staging.yml'
  #         target: '~/beam_suntory_staging'
  #     - name: Deploy beam-suntory-app to staging
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
  #         username: ${{ secrets.SSH_PROD_USER }}
  #         key: ${{ secrets.SSH_PROD_KEY }}
  #         port: ${{ secrets.SSH_PROD_PORT }}
  #         script: |
  #           cd beam_suntory_staging &&
  #           mv docker-compose.staging.yml docker-compose.yml &&
  #           docker compose pull &&
  #           docker compose up -d &&
  deploy-prod:
    name: Deploy to prod
    runs-on: Linux
    needs:
      - build
      - on-develop-branch-check
    if: ${{ needs.on-develop-branch-check.outputs.on_develop == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
          username: ${{ secrets.SSH_PROD_USER }}
          key: ${{ secrets.SSH_PROD_KEY }}
          port: ${{ secrets.SSH_PROD_PORT }}
          source: 'docker-compose.prod.yml'
          target: '~/beam_suntory'
      - name: Deploy beam-suntory-app to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
          username: ${{ secrets.SSH_PROD_USER }}
          key: ${{ secrets.SSH_PROD_KEY }}
          port: ${{ secrets.SSH_PROD_PORT }}
          script: |
            cd beam_suntory &&
            mv docker-compose.prod.yml docker-compose.yml &&
            docker compose pull &&
            docker compose up -d &&
            docker system prune -f
  deploy-campari:
    name: Deploy to campari
    runs-on: Linux
    needs:
      - build
      - on-develop-branch-check
    if: ${{ needs.on-develop-branch-check.outputs.on_develop == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
          username: ${{ secrets.SSH_PROD_USER }}
          key: ${{ secrets.SSH_PROD_KEY }}
          port: ${{ secrets.SSH_PROD_PORT }}
          source: 'docker-compose.campari.yml'
          target: '~/beam_campari'
      - name: Deploy beam-suntory-app to campari
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
          username: ${{ secrets.SSH_PROD_USER }}
          key: ${{ secrets.SSH_PROD_KEY }}
          port: ${{ secrets.SSH_PROD_PORT }}
          script: |
            cd beam_campari &&
            mv docker-compose.campari.yml docker-compose.yml &&
            docker compose pull &&
            docker compose up -d &&
            docker system prune -f
  deploy-proximo:
    name: Deploy to proximo
    runs-on: Linux
    needs:
      - build
      - on-develop-branch-check
    if: ${{ needs.on-develop-branch-check.outputs.on_develop == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
          username: ${{ secrets.SSH_PROD_USER }}
          key: ${{ secrets.SSH_PROD_KEY }}
          port: ${{ secrets.SSH_PROD_PORT }}
          source: 'docker-compose.proximo.yml'
          target: '~/beam_proximo'
      - name: Deploy beam-suntory-app to proximo
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_IP_CLIENT_PROD }}
          username: ${{ secrets.SSH_PROD_USER }}
          key: ${{ secrets.SSH_PROD_KEY }}
          port: ${{ secrets.SSH_PROD_PORT }}
          script: |
            cd beam_proximo &&
            mv docker-compose.proximo.yml docker-compose.yml &&
            docker compose pull &&
            docker compose up -d &&
            docker system prune -f
