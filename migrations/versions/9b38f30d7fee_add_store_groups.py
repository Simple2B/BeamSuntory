"""add store groups

Revision ID: 9b38f30d7fee
Revises: 041b4d437353
Create Date: 2024-09-26 08:34:04.329464

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "9b38f30d7fee"
down_revision = "041b4d437353"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "store_master_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_store_master_groups")),
        sa.UniqueConstraint("name", name=op.f("uq_store_master_groups_name")),
    )
    op.create_table(
        "store_groups",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("master_store_group_id", sa.Integer(), nullable=False),
        sa.Column("store_id", sa.Integer(), nullable=False),
        sa.Column("sub_group_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=64), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["master_store_group_id"],
            ["store_master_groups.id"],
            name=op.f("fk_store_groups_master_store_group_id_store_master_groups"),
        ),
        sa.ForeignKeyConstraint(
            ["store_id"], ["stores.id"], name=op.f("fk_store_groups_store_id_stores")
        ),
        sa.ForeignKeyConstraint(
            ["sub_group_id"],
            ["store_groups.id"],
            name=op.f("fk_store_groups_sub_group_id_store_groups"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_store_groups")),
        sa.UniqueConstraint("name", name=op.f("uq_store_groups_name")),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "has_access_bulk_ship", sa.Boolean(), nullable=False, server_default="0"
            )
        )
        batch_op.add_column(
            sa.Column(
                "has_access_bulk_assign",
                sa.Boolean(),
                nullable=False,
                server_default="0",
            )
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_column("has_access_bulk_assign")
        batch_op.drop_column("has_access_bulk_ship")

    op.drop_table("store_groups")
    op.drop_table("store_master_groups")
    # ### end Alembic commands ###
