"""allocation and price

Revision ID: 3ba0b6284cfa
Revises: dc061e0b3e6f
Create Date: 2023-08-11 16:30:05.599694

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "3ba0b6284cfa"
down_revision = "dc061e0b3e6f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "io_allocate_product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("inbound_order_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["inbound_order_id"],
            ["inbound_orders.id"],
            name=op.f("fk_io_allocate_product_inbound_order_id_inbound_orders"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("fk_io_allocate_product_product_id_products"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_io_allocate_product")),
    )
    with op.batch_alter_table("product_quantity_group", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("shelf_life_start", sa.DateTime(), nullable=False)
        )
        batch_op.add_column(sa.Column("shelf_life_end", sa.DateTime(), nullable=False))

    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.add_column(sa.Column("price", sa.Float(), nullable=False))
        batch_op.drop_column("shelf_life_start")
        batch_op.drop_column("shelf_life_end")
        batch_op.drop_column("regular_price")
        batch_op.drop_column("retail_price")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "retail_price",
                sa.DOUBLE_PRECISION(precision=53),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "regular_price",
                sa.DOUBLE_PRECISION(precision=53),
                autoincrement=False,
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "shelf_life_end",
                postgresql.TIMESTAMP(),
                autoincrement=False,
                nullable=False,
            )
        )
        batch_op.add_column(
            sa.Column(
                "shelf_life_start",
                postgresql.TIMESTAMP(),
                autoincrement=False,
                nullable=False,
            )
        )
        batch_op.drop_column("price")

    with op.batch_alter_table("product_quantity_group", schema=None) as batch_op:
        batch_op.drop_column("shelf_life_end")
        batch_op.drop_column("shelf_life_start")

    op.drop_table("io_allocate_product")
    # ### end Alembic commands ###
