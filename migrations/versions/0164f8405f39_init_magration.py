"""init magration

Revision ID: 0164f8405f39
Revises: 
Create Date: 2023-09-08 09:58:00.008620

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0164f8405f39'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('delivery_agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('contact_number', sa.String(length=64), nullable=False),
    sa.Column('street_address', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_delivery_agents'))
    )
    op.create_table('divisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=64), nullable=False),
    sa.Column('activated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_divisions')),
    sa.UniqueConstraint('role_name', name=op.f('uq_divisions_role_name'))
    )
    op.create_table('master_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_master_groups')),
    sa.UniqueConstraint('name', name=op.f('uq_master_groups_name'))
    )
    op.create_table('master_groups_for_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_master_groups_for_product')),
    sa.UniqueConstraint('name', name=op.f('uq_master_groups_for_product_name'))
    )
    op.create_table('product_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=258), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_product_categories_name'))
    )
    op.create_table('store_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('parent_category', sa.String(length=64), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_store_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_store_categories_name'))
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('contact_number', sa.String(length=64), nullable=False),
    sa.Column('country', sa.String(length=64), nullable=False),
    sa.Column('region', sa.String(length=64), nullable=False),
    sa.Column('city', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('zip', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_suppliers')),
    sa.UniqueConstraint('name', name=op.f('uq_suppliers_name'))
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('master_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['master_group_id'], ['master_groups.id'], name=op.f('fk_groups_master_group_id_master_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_groups')),
    sa.UniqueConstraint('name', name=op.f('uq_groups_name'))
    )
    op.create_table('groups_for_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('master_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['master_group_id'], ['master_groups_for_product.id'], name=op.f('fk_groups_for_product_master_group_id_master_groups_for_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_groups_for_product')),
    sa.UniqueConstraint('name', name=op.f('uq_groups_for_product_name'))
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('currency', sa.Enum('USD', 'CAD', name='currency'), nullable=True),
    sa.Column('regular_price', sa.Float(), nullable=True),
    sa.Column('retail_price', sa.Float(), nullable=True),
    sa.Column('image', sa.Text(), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('SKU', sa.String(length=64), nullable=False),
    sa.Column('low_stock_level', sa.Integer(), nullable=True),
    sa.Column('program_year', sa.Integer(), nullable=True),
    sa.Column('package_qty', sa.Integer(), nullable=True),
    sa.Column('numb_of_items_per_case', sa.Integer(), nullable=True),
    sa.Column('numb_of_cases_per_outer_case', sa.Integer(), nullable=True),
    sa.Column('comments', sa.String(length=256), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name=op.f('fk_products_supplier_id_suppliers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products')),
    sa.UniqueConstraint('name', name=op.f('uq_products_name'))
    )
    op.create_table('properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('master_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['master_group_id'], ['master_groups.id'], name=op.f('fk_properties_master_group_id_master_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_properties')),
    sa.UniqueConstraint('name', name=op.f('uq_properties_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('activated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('reset_password_uid', sa.String(length=64), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('role', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=255), nullable=False),
    sa.Column('region', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=255), nullable=False),
    sa.Column('zip_code', sa.String(length=255), nullable=False),
    sa.Column('street_address', sa.String(length=255), nullable=False),
    sa.Column('approval_permission', sa.Boolean(), nullable=False),
    sa.Column('sales_rep', sa.Boolean(), nullable=False),
    sa.Column('phone_number', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['divisions.id'], name=op.f('fk_users_role_divisions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('adjusts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_adjusts_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_adjusts'))
    )
    op.create_table('assigns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_assigns_group_id_groups')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_assigns_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_assigns'))
    )
    op.create_table('bool_values',
    sa.Column('value', sa.Boolean(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_bool_values_group_id_groups')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_bool_values_property_id_properties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bool_values'))
    )
    op.create_table('date_values',
    sa.Column('value', sa.DateTime(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_date_values_group_id_groups')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_date_values_property_id_properties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_date_values'))
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_from', sa.Date(), nullable=False),
    sa.Column('date_to', sa.Date(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_events_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
    )
    op.create_table('float_values',
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_float_values_group_id_groups')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_float_values_property_id_properties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_float_values'))
    )
    op.create_table('int_values',
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_int_values_group_id_groups')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_int_values_property_id_properties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_int_values'))
    )
    op.create_table('product_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups_for_product.id'], name=op.f('fk_product_group_group_id_groups_for_product')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_group_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_group'))
    )
    op.create_table('request_share',
    sa.Column('order_numb', sa.String(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('from_group_id', sa.Integer(), nullable=False),
    sa.Column('desire_quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('finished_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_group_id'], ['groups.id'], name=op.f('fk_request_share_from_group_id_groups')),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_request_share_group_id_groups')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_request_share_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_request_share')),
    sa.UniqueConstraint('order_numb', name=op.f('uq_request_share_order_numb'))
    )
    op.create_table('stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_category_id', sa.Integer(), nullable=False),
    sa.Column('store_name', sa.String(length=64), nullable=False),
    sa.Column('contact_person', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('phone_numb', sa.String(length=64), nullable=False),
    sa.Column('country', sa.String(length=64), nullable=False),
    sa.Column('region', sa.String(length=64), nullable=False),
    sa.Column('city', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('zip', sa.String(length=64), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_category_id'], ['store_categories.id'], name=op.f('fk_stores_store_category_id_store_categories')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_stores_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stores')),
    sa.UniqueConstraint('store_name', name=op.f('uq_stores_store_name'))
    )
    op.create_table('str_values',
    sa.Column('value', sa.String(length=64), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_str_values_group_id_groups')),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], name=op.f('fk_str_values_property_id_properties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_str_values')),
    sa.UniqueConstraint('value', name=op.f('uq_str_values_value'))
    )
    op.create_table('user_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('left_id', sa.Integer(), nullable=False),
    sa.Column('right_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['left_id'], ['users.id'], name=op.f('fk_user_group_left_id_users')),
    sa.ForeignKeyConstraint(['right_id'], ['groups.id'], name=op.f('fk_user_group_right_id_groups')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_group'))
    )
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('phone_number', sa.String(length=64), nullable=False),
    sa.Column('city', sa.String(length=64), nullable=False),
    sa.Column('zip', sa.String(length=64), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], name=op.f('fk_warehouses_manager_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_warehouses')),
    sa.UniqueConstraint('name', name=op.f('uq_warehouses_name'))
    )
    op.create_table('adjusts_group_qty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('adjust_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['adjust_id'], ['adjusts.id'], name=op.f('fk_adjusts_group_qty_adjust_id_adjusts')),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_adjusts_group_qty_group_id_groups')),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_adjusts_group_qty_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_adjusts_group_qty'))
    )
    op.create_table('favorite_store_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], name=op.f('fk_favorite_store_user_store_id_stores')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_favorite_store_user_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_favorite_store_user'))
    )
    op.create_table('inbound_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('order_id', sa.String(length=64), nullable=False),
    sa.Column('active_date', sa.Date(), nullable=False),
    sa.Column('active_time', sa.String(length=64), nullable=False),
    sa.Column('delivery_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'assigned', 'delivered', 'in_transit', 'cancelled', name='inboundorderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], name=op.f('fk_inbound_orders_supplier_id_suppliers')),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_inbound_orders_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inbound_orders'))
    )
    with op.batch_alter_table('inbound_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inbound_orders_uuid'), ['uuid'], unique=False)

    op.create_table('request_share_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('request_share_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['request_share_id'], ['request_share.id'], name=op.f('fk_request_share_user_request_share_id_request_share')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_request_share_user_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_request_share_user'))
    )
    op.create_table('ship_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_numb', sa.String(length=64), nullable=False),
    sa.Column('status', sa.Enum('waiting_for_warehouse', 'assigned', 'delivered', 'in_transit', 'cancelled', name='shiprequeststatus'), nullable=False),
    sa.Column('store_category_id', sa.Integer(), nullable=False),
    sa.Column('order_type', sa.String(length=128), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.Column('wm_notes', sa.Text(), nullable=True),
    sa.Column('da_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['store_category_id'], ['store_categories.id'], name=op.f('fk_ship_requests_store_category_id_store_categories')),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], name=op.f('fk_ship_requests_store_id_stores'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ship_requests_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ship_requests')),
    sa.UniqueConstraint('order_numb', name=op.f('uq_ship_requests_order_numb'))
    )
    op.create_table('warehouse_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('product_quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_warehouse_product_group_id_groups')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_warehouse_product_product_id_products')),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_warehouse_product_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_warehouse_product'))
    )
    op.create_table('carts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.Column('order_numb', sa.String(length=64), nullable=True),
    sa.Column('group', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('ship_request_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_carts_product_id_products')),
    sa.ForeignKeyConstraint(['ship_request_id'], ['ship_requests.id'], name=op.f('fk_carts_ship_request_id_ship_requests')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_carts_user_id_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_carts_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_carts'))
    )
    op.create_table('package_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity_per_wrap', sa.Integer(), nullable=False),
    sa.Column('quantity_wrap_carton', sa.Integer(), nullable=False),
    sa.Column('quantity_carton_master', sa.Integer(), nullable=False),
    sa.Column('inbound_order_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inbound_order_id'], ['inbound_orders.id'], name=op.f('fk_package_info_inbound_order_id_inbound_orders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_package_info'))
    )
    op.create_table('products_allocated',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('inbound_order_id', sa.Integer(), nullable=False),
    sa.Column('shelf_life_start', sa.Date(), nullable=False),
    sa.Column('shelf_life_end', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['inbound_order_id'], ['inbound_orders.id'], name=op.f('fk_products_allocated_inbound_order_id_inbound_orders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_products_allocated_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products_allocated'))
    )
    op.create_table('product_quantity_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_received', sa.Integer(), nullable=True),
    sa.Column('product_allocated_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_product_quantity_group_group_id_groups')),
    sa.ForeignKeyConstraint(['product_allocated_id'], ['products_allocated.id'], name=op.f('fk_product_quantity_group_product_allocated_id_products_allocated')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_quantity_group'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_quantity_group')
    op.drop_table('products_allocated')
    op.drop_table('package_info')
    op.drop_table('carts')
    op.drop_table('warehouse_product')
    op.drop_table('ship_requests')
    op.drop_table('request_share_user')
    with op.batch_alter_table('inbound_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inbound_orders_uuid'))

    op.drop_table('inbound_orders')
    op.drop_table('favorite_store_user')
    op.drop_table('adjusts_group_qty')
    op.drop_table('warehouses')
    op.drop_table('user_group')
    op.drop_table('str_values')
    op.drop_table('stores')
    op.drop_table('request_share')
    op.drop_table('product_group')
    op.drop_table('int_values')
    op.drop_table('float_values')
    op.drop_table('events')
    op.drop_table('date_values')
    op.drop_table('bool_values')
    op.drop_table('assigns')
    op.drop_table('adjusts')
    op.drop_table('users')
    op.drop_table('properties')
    op.drop_table('products')
    op.drop_table('groups_for_product')
    op.drop_table('groups')
    op.drop_table('suppliers')
    op.drop_table('store_categories')
    op.drop_table('product_categories')
    op.drop_table('master_groups_for_product')
    op.drop_table('master_groups')
    op.drop_table('divisions')
    op.drop_table('delivery_agents')
    # ### end Alembic commands ###
