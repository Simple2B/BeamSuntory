"""store delete for ship request

Revision ID: 4a25e6bf9177
Revises: 8eceea58c0ac
Create Date: 2023-07-18 09:58:15.029557

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4a25e6bf9177'
down_revision = '8eceea58c0ac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ship_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('store_category', sa.String(length=64), nullable=False))
        batch_op.drop_constraint('fk_ship_requests_store_id_stores', type_='foreignkey')
        batch_op.drop_column('store_id')

    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.alter_column('contact_number',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('country',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
        batch_op.alter_column('region',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.alter_column('region',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('country',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.alter_column('contact_number',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)

    with op.batch_alter_table('ship_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('fk_ship_requests_store_id_stores', 'stores', ['store_id'], ['id'])
        batch_op.drop_column('store_category')

    # ### end Alembic commands ###
